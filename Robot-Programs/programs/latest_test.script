def unnamed():
  global _hidden_verificationVariable=0
  set_safety_mode_transition_hardness(1)
  set_gravity([0.0, 0.0, 9.82])
  set_tcp(p[0.028210348281514253,-0.09610723587300697,-0.09969041498611403,0.0,0.0,0.0])
  set_standard_analog_input_domain(0, 1)
  set_standard_analog_input_domain(1, 1)
  set_tool_analog_input_domain(0, 1)
  set_tool_analog_input_domain(1, 1)
  set_analog_outputdomain(0, 0)
  set_analog_outputdomain(1, 0)
  set_input_actions_to_default()
  set_tool_communication(False, 115200, 0, 1, 1.5, 3.5)
  set_tool_output_mode(0)
  set_tool_digital_output_mode(0, 1)
  set_tool_digital_output_mode(1, 1)
  set_tool_voltage(0)
  set_target_payload(0.260000, [0.050000, -0.008000, 0.024000], [0.000163, 0.000163, 0.000163, 0.000000, 0.000000, 0.000000])
  global Plane_1=p[0.32571614183608727,0.7933870146316717,0.11820742021636722,-2.208244884171713,-0.24738609815952348,-1.9195085473101943]
  global Plane_2=p[0.3436052139151623,0.7478032414335104,0.10077839665899768,2.768545736097797,0.1284831553507919,1.3672805628273381]
  global Plane_3=p[0.31945151854627996,0.6757990361168175,0.09459088830114093,2.7301760593116526,-0.049483824131046385,1.4252239353300047]
  global Plane_4=p[0.3372257363094211,0.6222230974198586,0.07001667903587716,2.621672423508307,-0.12240385890263918,1.4373011913128484]
  # begin: URCap Installation Node
  #   Source: External Control, 1.0.5, FZI Research Center for Information Technology
  #   Type: External Control
  # end: URCap Installation Node
  step_count_15a0fdbe_a604_46ed_9e66_c7b6e426bff1 = 0.0
  thread Step_Counter_Thread_e7bb917b_a432_4eff_94a8_a7962f850f37():
    while (True):
      step_count_15a0fdbe_a604_46ed_9e66_c7b6e426bff1 = step_count_15a0fdbe_a604_46ed_9e66_c7b6e426bff1 + 1.0
      sync()
    end
  end
  run Step_Counter_Thread_e7bb917b_a432_4eff_94a8_a7962f850f37()
  global timer_1=0
  global timer_2=0
  global Waypoint_1_p=p[.255207331122, .811658167337, .129108386415, 1.738924283794, 2.310428551122, -1.107753568452]
  global Waypoint_1_q=[-2.1357390865281953, -0.25800854558481134, 0.5461371958945197, -1.125392426618962, -1.555786650509841, -2.419880619474636]
  global Waypoint_7_from_p=p[.334897038797, .530885396885, .229597943642, 1.738965800729, 2.310400511606, -1.107771749412]
  global Waypoint_7_to_p=p[.332316953739, .433320303550, .108290556243, -1.644956143246, -2.108109263214, 1.059075544475]
  global Waypoint_6_p=p[.332580873770, .211379769050, .108291185252, -1.644956384976, -2.108101752358, 1.059071402912]
  global Waypoint_6_q=[-2.999210159655675, -0.9044912918890518, 2.2177420085479818, -2.1298181728944527, -1.8609334123373777, -3.1238684621592654]
  global Waypoint_2_p=p[.395327225653, .317909637846, .305826489206, 1.738924283763, 2.310428550894, -1.107753568900]
  global Waypoint_2_q=[-2.8159710998724172, -1.1839948226902983, 1.8074412843478633, -1.5759268018043278, -1.9904723215831952, -2.957970419382864]
  global timer_2_is_counting=False
  global timer_1_is_counting=False
  thread Timer_Thread():
    while (True):
      if (timer_2_is_counting):
        timer_2 = timer_2 + get_steptime()
      end
      if (timer_1_is_counting):
        timer_1 = timer_1 + get_steptime()
      end
      sync()
    end
  end
  run Timer_Thread()
  def a_d_x():
    $ 8 "a_d_x" "noBreak"
    $ 9 "MoveJ"
    $ 10 "Waypoint_7" "breakAfter"
    movej(pose_add(get_target_tcp_pose(), pose_sub(Waypoint_7_to_p, Waypoint_7_from_p)), a=1.3962634015954636, v=1.0471975511965976)
  end
  def d_full_bow():
    $ 11 "d_full_bow" "noBreak"
    $ 12 "timer_1: Start"
    timer_1_is_counting = True
    $ 13 "MoveL"
    $ 14 "Waypoint_6" "breakAfter"
    global move_thread_flag_14=0
    thread move_thread_14():
      enter_critical
      move_thread_flag_14 = 1
      movel(Waypoint_6_p, a=1.2, v=0.25)
      move_thread_flag_14 = 2
      exit_critical
    end
    move_thread_flag_14 = 0
    move_thread_han_14 = run move_thread_14()
    while (True):
      if (timer_1 == 1):
        kill move_thread_han_14
        stopl(1.2)
        $ 15 "Until (expression)"
        break
      end
      sleep(1.0E-10)
      if (move_thread_flag_14 > 1):
        join move_thread_han_14
        break
      end
      sync()
    end
    $ 16 "timer_1â‰”0"
    global timer_1=0
  end
  def a_full_bow():
    $ 17 "a_full_bow" "noBreak"
    $ 18 "timer_2: Start"
    timer_2_is_counting = True
    $ 19 "MoveL"
    $ 20 "Waypoint_2" "breakAfter"
    global move_thread_flag_20=0
    thread move_thread_20():
      enter_critical
      move_thread_flag_20 = 1
      movel(Waypoint_2_p, a=1.2, v=0.25)
      move_thread_flag_20 = 2
      exit_critical
    end
    move_thread_flag_20 = 0
    move_thread_han_20 = run move_thread_20()
    while (True):
      if (timer_2 == 1):
        kill move_thread_han_20
        stopl(1.2)
        $ 21 "Until (expression)"
        break
      end
      sleep(1.0E-10)
      if (move_thread_flag_20 > 1):
        join move_thread_han_20
        break
      end
      sync()
    end
  end
  while (True):
    $ 2 "Robot Program"
    $ 3 "MoveJ"
    $ 4 "Waypoint_1" "breakAfter"
    movej(get_inverse_kin(Waypoint_1_p, qnear=Waypoint_1_q), a=1.3962634015954636, v=1.0471975511965976)
    $ 5 "Call a_full_bow"
    a_full_bow()
    $ 6 "Call a_d_x"
    a_d_x()
    $ 7 "Call d_full_bow"
    d_full_bow()
  end
end
