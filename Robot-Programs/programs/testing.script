def testing():
  global _hidden_verificationVariable=0
  set_tool_communication(False, 115200, 0, 1, 1.5, 3.5)
  set_tool_output_mode(0)
  set_tool_digital_output_mode(0, 1)
  set_tool_digital_output_mode(1, 1)
  set_tool_voltage(0)
  set_target_payload(0.260000, [0.050000, -0.008000, 0.024000], [0.000163, 0.000163, 0.000163, 0.000000, 0.000000, 0.000000])
  set_tcp(p[0.028210348281514253,-0.09610723587300697,-0.09969041498611403,0.0,0.0,0.0])
  set_safety_mode_transition_hardness(1)
  set_gravity([0.0, 0.0, 9.82])
  set_standard_analog_input_domain(0, 1)
  set_standard_analog_input_domain(1, 1)
  set_tool_analog_input_domain(0, 1)
  set_tool_analog_input_domain(1, 1)
  set_analog_outputdomain(0, 0)
  set_analog_outputdomain(1, 0)
  set_input_actions_to_default()
  global Plane_1=p[0.32571614183608727,0.7933870146316717,0.11820742021636722,-2.208244884171713,-0.24738609815952348,-1.9195085473101943]
  global Plane_2=p[0.3436052139151623,0.7478032414335104,0.10077839665899768,2.768545736097797,0.1284831553507919,1.3672805628273381]
  global Plane_3=p[0.31945151854627996,0.6757990361168175,0.09459088830114093,2.7301760593116526,-0.049483824131046385,1.4252239353300047]
  global Plane_4=p[0.3372257363094211,0.6222230974198586,0.07001667903587716,2.621672423508307,-0.12240385890263918,1.4373011913128484]
  # begin: URCap Installation Node
  #   Source: External Control, 1.0.5, FZI Research Center for Information Technology
  #   Type: External Control
  # end: URCap Installation Node
  step_count_0e4edbd7_2ae4_4ba3_916b_9e2970ae38d8 = 0.0
  thread Step_Counter_Thread_057cf1f9_7acf_4055_b688_e88626e2a37c():
    while (True):
      step_count_0e4edbd7_2ae4_4ba3_916b_9e2970ae38d8 = step_count_0e4edbd7_2ae4_4ba3_916b_9e2970ae38d8 + 1.0
      sync()
    end
  end
  run Step_Counter_Thread_057cf1f9_7acf_4055_b688_e88626e2a37c()
  global timer_1=0
  global Waypoint_1_p=p[.277236601206, .734032359319, .156891527665, 1.738924275492, 2.310428552465, -1.107753563859]
  global Waypoint_1_q=[-2.210412708052746, -0.49084595566760747, 0.9551938502229333, -1.302301742823495, -1.605072055336045, -2.4750900912233345]
  global Waypoint_4_p=p[.316077312490, .723623595662, .117799670871, -1.534889662293, -2.238632259483, 1.127400451889]
  global Waypoint_4_q=[-2.242021877446584, -0.38165996279939307, 0.8869457297054186, -1.272890832275217, -1.4303469853910338, -2.667787439248039]
  global Waypoint_3_p=p[.340805991578, .238625252067, .127337845573, -1.537488441739, -2.122265165311, 1.086311360735]
  global Waypoint_3_q=[-2.929603302251793, -0.933202051050845, 2.156668626473035, -1.9841046493496384, -1.824622541518269, -3.1322683391321924]
  global Waypoint_9_from_p=p[.327368721889, .541717258855, .231872216279, 1.681717380777, 2.324768307788, -1.111436237110]
  global Waypoint_9_to_p=p[.337286519225, .452572570933, .146265050001, -1.608370683840, -2.197747239626, 1.042920212643]
  global Waypoint_2_p=p[.374968604898, .359127022696, .303034911964, 1.627458665305, 2.337349329242, -1.114572205166]
  global Waypoint_2_q=[-2.7247493443475914, -1.158338378007028, 1.7724153080119223, -1.5486980058846118, -1.9971692127719525, -2.9342161342950686]
  global timer_1_is_counting=False
  thread Timer_Thread():
    while (True):
      if (timer_1_is_counting):
        timer_1 = timer_1 + get_steptime()
      end
      sync()
    end
  end
  run Timer_Thread()
  def d_full_bow():
    $ 12 "d_full_bow" "noBreak"
    $ 13 "timer_1: Start"
    timer_1_is_counting = True
    $ 14 "If bow_dir≟ False "
    if (bow_dir ==   False  ):
      $ 15 "MoveL"
      $ 16 "Waypoint_4" "breakAfter"
      global move_thread_flag_16=0
      thread move_thread_16():
        enter_critical
        move_thread_flag_16 = 1
        movel(Waypoint_4_p, a=1.2, v=0.25)
        move_thread_flag_16 = 2
        exit_critical
      end
      move_thread_flag_16 = 0
      move_thread_han_16 = run move_thread_16()
      while (True):
        if (timer_1 == note_dur):
          kill move_thread_han_16
          stopl(1.2)
          $ 17 "Until (expression)"
          break
        end
        sleep(1.0E-10)
        if (move_thread_flag_16 > 1):
          join move_thread_han_16
          break
        end
        sync()
      end
    else:
      $ 18 "Else" "noBreak"
      $ 19 "MoveL"
      $ 20 "Waypoint_3" "breakAfter"
      global move_thread_flag_20=0
      thread move_thread_20():
        enter_critical
        move_thread_flag_20 = 1
        movel(Waypoint_3_p, a=1.2, v=0.25)
        move_thread_flag_20 = 2
        exit_critical
      end
      move_thread_flag_20 = 0
      move_thread_han_20 = run move_thread_20()
      while (True):
        if (timer_1 == note_dur):
          kill move_thread_han_20
          stopl(1.2)
          $ 21 "Until (expression)"
          break
        end
        sleep(1.0E-10)
        if (move_thread_flag_20 > 1):
          join move_thread_han_20
          break
        end
        sync()
      end
    end
    $ 26 "timer_1: Stop"
    timer_1_is_counting = False
    $ 27 "timer_1: Reset"
    timer_1 = 0
  end
  def a_to_d():
    $ 28 "a_to_d" "noBreak"
    $ 29 "MoveJ"
    $ 30 "Waypoint_9" "breakAfter"
    movej(pose_add(get_target_tcp_pose(), pose_sub(Waypoint_9_to_p, Waypoint_9_from_p)), a=1.3962634015954636, v=1.0471975511965976)
  end
  def a_full_bow():
    $ 31 "a_full_bow" "noBreak"
    $ 32 "timer_1: Start"
    timer_1_is_counting = True
    $ 33 "If bow_dir"
    if (bow_dir):
      $ 34 "MoveL"
      $ 35 "Waypoint_2" "breakAfter"
      global move_thread_flag_35=0
      thread move_thread_35():
        enter_critical
        move_thread_flag_35 = 1
        movel(Waypoint_2_p, a=1.2, v=0.25)
        move_thread_flag_35 = 2
        exit_critical
      end
      move_thread_flag_35 = 0
      move_thread_han_35 = run move_thread_35()
      while (True):
        if (timer_1 == note_dur):
          kill move_thread_han_35
          stopl(1.2)
          $ 36 "Until (expression)"
          break
        end
        sleep(1.0E-10)
        if (move_thread_flag_35 > 1):
          join move_thread_han_35
          break
        end
        sync()
      end
    else:
      $ 37 "Else" "noBreak"
      $ 38 "MoveL"
      $ 39 "Waypoint_1" "breakAfter"
      global move_thread_flag_39=0
      thread move_thread_39():
        enter_critical
        move_thread_flag_39 = 1
        movel(Waypoint_1_p, a=1.2, v=0.25)
        move_thread_flag_39 = 2
        exit_critical
      end
      move_thread_flag_39 = 0
      move_thread_han_39 = run move_thread_39()
      while (True):
        if (timer_1 == note_dur):
          kill move_thread_han_39
          stopl(1.2)
          $ 40 "Until (expression)"
          break
        end
        sleep(1.0E-10)
        if (move_thread_flag_39 > 1):
          join move_thread_han_39
          break
        end
        sync()
      end
    end
    $ 45 "timer_1: Stop"
    timer_1_is_counting = False
    $ 46 "timer_1: Reset"
    timer_1 = 0
  end
  while (True):
    $ 2 "Robot Program"
    $ 3 "MoveJ"
    $ 4 "Waypoint_1" "breakAfter"
    movej(get_inverse_kin(Waypoint_1_p, qnear=Waypoint_1_q), a=1.3962634015954636, v=1.0471975511965976)
    $ 5 "bow_dir≔ True "
    global bow_dir=  True  
    $ 6 "note_dur≔1"
    global note_dur=1
    $ 7 "Call a_full_bow"
    a_full_bow()
    $ 8 "Call a_to_d"
    a_to_d()
    $ 9 "bow_dir≔ False "
    global bow_dir=  False  
    $ 10 "Call d_full_bow"
    d_full_bow()
    $ 11 "Halt"
    halt
  end
end
